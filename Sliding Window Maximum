class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int size = nums.size();
        if(size == 1 || k == 1){
            return nums;
        } 
        vector<int> res;
        vector<int> window(k,0);
        deque<int> dq;
        for(int end =0; end < size; end++){
            int start = end - k;
            if(!dq.empty() && dq.front() == start){
                dq.pop_front();
            }
            while(!dq.empty() && nums[end] > nums[dq.back()]){
                dq.pop_back();
            }
             dq.push_back(end);
            if(end>=k-1){
                res.push_back(nums[dq.front()]);
            }
        }
        return res;
    }
};
